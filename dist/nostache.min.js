!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Nostache=t()}(this,(function(){"use strict";const e={};function t(e){function t(e){if(e.length>1){const t={};for(let n=0;n<e.length;n++)t[e.charCodeAt(n)]=!0;return t}return e.charCodeAt(0)}const o=t(" \t\r\n"),r=t("<"),c=t(">"),i=t("{"),f=t("}"),s=t(";"),u=t("="),l=t("\\"),a=t("'"),h=t("\n"),d=t("\r");let p=0,$=0;const A=e.length,C=n.resultVariable;let b=`let ${C}='';\n`;function g(t=p,n=""){(t>$||n)&&(b+=`${C}+='${e.slice($,t)}${n}';\n`)}function y(){p>$&&(b+=`${C}+=${e.slice($,p)};\n`)}function v(){p>$&&(b+=`${e.slice($,p)}`)}function j(t){return t===r&&e.charCodeAt(p+1)===i?(g(),p+=2,function(){$=p;let t=!0;for(;p<A;){const n=e.charCodeAt(p);if(n===i)p++,t=!0;else if(t&&o[n])p++;else if(t&&n===r)t=!1,v(),m();else{if(n===f&&e.charCodeAt(p+1)===c){v(),p+=2;break}p++,t=!1}}$=p}(),!0):t===u&&e.charCodeAt(p+1)===i?(g(),p+=2,function(){$=p;let t=!1;for(;p<A;){const n=e.charCodeAt(p);if(n===f&&e.charCodeAt(p+1)===c){t&&y(),p+=2;break}o[n]?p++:(p++,t=!0)}$=p}(),!0):t===r&&e.charCodeAt(p+1)===s&&e.charCodeAt(p+2)===c?(g(),p++,$=p,p++,v(),p++,$=p,!0):t===h?(g(p,"\\n"),p++,$=p,!0):t===d&&e.charCodeAt(p+1)===h?(g(p,"\\n"),p+=2,$=p,!0):t===l?(g(p,"\\\\"),p++,$=p,!0):t===a?(g(p,"\\'"),p++,$=p,!0):(t===r||t===u)&&e.charCodeAt(p+1)===t&&e.charCodeAt(p+2)===i&&(p++,g(),p++,$=p,!0)}function m(){$=p;let t=-1;for(;p<A;){const n=e.charCodeAt(p);if(n===c)p++,t=p;else if(t>=0&&o[n])p++;else{if(t>=0&&n===f){g(t);break}j(n)||(p++,t=-1)}}$=p}for(;p<A;){j(e.charCodeAt(p))||p++}return g(),b+=`return ${C};`,b}function n(o){var r;const c=null!==(r=e[o])&&void 0!==r?r:e[o]=t(o);function i(e){const t=[],o=[],r={};if(e&&"object"==typeof e)for(const n in e)!(n in r)&&/^[_a-z]\w*$/i.test(n)&&(t.push(n),o.push(e[n]));try{return(n.verbose||i.verbose)&&console.log(`(function Nostache(${t.join(", ")}) {\n${c}\n})(`,...o.reduce(((e,t)=>(e.length>0&&e.push(","),e.push("string"==typeof t?`"${t}"`:t),e)),[]),")"),Function(...t,c).apply(e,o)}catch(e){throw e.message+=`\nat (function (${t.join(", ")}) {\n${c}\n})(${o.map((e=>"string"==typeof e?`"${e}"`:e)).join(", ")})`,e}}return i.verbose=!1,i}return n.verbose=!1,n.resultVariable="_",n}));//# sourceMappingURL=nostache.min.js.map
